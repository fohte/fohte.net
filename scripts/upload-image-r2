#!/usr/bin/env bash

set -euo pipefail

usage() {
  echo "usage: $0 <image_path> [<max-width>]"
  exit 1
}

image_path="$1"

[[ -n "$image_path" ]] || usage
[[ -f "$image_path" ]] || {
  echo "error: file not found: $image_path" >&2
  exit 1
}

max_width="${2:-1000}"
extension="${image_path##*.}"

checksum="$(openssl dgst -sha1 -binary "$image_path" | openssl base64 | tr '+/' '-_' | tr -d '=')"
put_base_path="fohte-net-public-assets/images"

put_object() {
  local image_path="$1"
  bunx wrangler r2 object put "$put_base_path/$checksum.${image_path##*.}" --file "$image_path"
}

# create webp (needs to be installed imagemagick)
if ! command -v convert &> /dev/null; then
  echo 'error: imagemagick is not installed. Please install it first.' >&2
  exit 1
fi

width="$(identify -format '%w' "$image_path")"

# minimize image size to $max_width to reduce bandwidth
if [[ "$width" -gt "$max_width" ]]; then
  echo "resizing image to ${max_width}px width..." >&2

  resized_image_path="${image_path%.*}-${max_width}.${extension}"
  convert "$image_path" -resize "${max_width}x>" "$resized_image_path"
  width="$max_width"
  image_path="$resized_image_path"
fi

height="$(identify -format '%h' "$image_path")"

case "$extension" in
  jpg | jpeg | png)
    echo 'creating webp...' >&2
    convert "$image_path" -quality 80 -define webp:lossless=false "${image_path%.*}.webp"

    echo 'uploading webp...' >&2
    put_object "${image_path%.*}.webp" >&2
    ;;
  *) ;;
esac

echo 'uploading original resized image...' >&2
put_object "$image_path" >&2

echo 'done!' >&2

echo "![image](https://assets.fohte.net/images/$checksum.$extension?w=$width&h=$height)"
