name: Deploy to Cloudflare Pages

on:
  push:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create GitHub deployment
        id: deployment
        uses: chrnorm/deployment-action@v2
        with:
          token: ${{ github.token }}
          environment: ${{ github.ref == 'refs/heads/master' && 'Production' || 'Preview' }}
          environment-url: ${{ github.ref == 'refs/heads/master' && 'https://fohte.net' || null }}
          description: Deploy to Cloudflare Pages
          initial-status: in_progress
          production-environment: ${{ github.ref == 'refs/heads/master' }}
          log-url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: Setup mise
        uses: jdx/mise-action@v2
        with:
          install: true

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            ~/.bun/install/global
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Cache Next.js build
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
            .contentlayer/.cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/bun.lockb') }}-${{ hashFiles('src/**', 'contents/**', 'contentlayer.config.ts', 'next.config.js', '!node_modules/**/*') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/bun.lockb') }}-
            ${{ runner.os }}-nextjs-

      - name: Build
        run: bun run build

      - name: Deploy to Cloudflare Pages
        id: cloudflare-deployment
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy ./out --project-name=fohte-net

      - name: Extract deployment URLs
        if: github.ref != 'refs/heads/master'
        id: extract-url
        run: |
          echo "${{ steps.cloudflare-deployment.outputs.command-output }}" > deployment-output.txt
          MAIN_URL=$(grep -o 'Take a peek over at https://[^[:space:]]*\.pages\.dev' deployment-output.txt | sed 's/Take a peek over at //' | head -1)
          ALIAS_URL=$(grep -o 'Deployment alias URL: https://[^[:space:]]*\.pages\.dev' deployment-output.txt | sed 's/Deployment alias URL: //' | head -1)
          echo "main-url=$MAIN_URL" >> $GITHUB_OUTPUT
          echo "alias-url=$ALIAS_URL" >> $GITHUB_OUTPUT

      - name: Update deployment status
        if: always()
        uses: chrnorm/deployment-status@v2
        with:
          token: ${{ github.token }}
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
          state: ${{ job.status }}
          environment-url: ${{ steps.extract-url.outputs.alias-url || steps.extract-url.outputs.main-url || (github.ref == 'refs/heads/master' && 'https://fohte.net' || '') }}
          log-url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
