name: Reviewdog

on:
  pull_request:

jobs:
  reviewdog:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup mise
        uses: jdx/mise-action@v2
        with:
          install: true
      - uses: reviewdog/action-setup@v1

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            ~/.bun/install/global
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-${{ hashFiles('bun.lock') }}
            ${{ runner.os }}-bun-

      - run: bun install --frozen-lockfile

      - name: Debug - Check environment
        run: |
          echo "Node version:"
          node --version
          echo "Bun version:"
          bun --version
          echo "mdast-util-gfm-autolink-literal version:"
          bun pm ls | grep mdast-util-gfm-autolink-literal || echo "Not found"
          echo "Check if from-markdown exists:"
          ls node_modules/mdast-util-gfm-autolink-literal/ || echo "Module not found"
          echo "Test module resolution with Node:"
          node -e "console.log(require.resolve('mdast-util-gfm-autolink-literal/from-markdown'))" || echo "Failed to resolve"
          echo "Test with bunx:"
          bunx textlint --version || echo "bunx textlint failed"
          echo "Test single file:"
          bun run textlint 'contents/posts/2018-11-06-hello-hugo.mdx' || echo "Failed"

      - run: |
          result="$(bun run textlint 'contents/**/*.mdx' -f checkstyle || true)"
          echo "$result" | reviewdog -f=checkstyle -name="textlint" -reporter='github-pr-check'
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
