name: Test

on:
  push:

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Setup mise
        uses: jdx/mise-action@v2
        with:
          install: true
      - uses: reviewdog/action-setup@v1

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            ~/.bun/install/global
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-${{ hashFiles('bun.lock') }}
            ${{ runner.os }}-bun-

      - run: bun install --frozen-lockfile

      - name: Install Playwright browsers
        run: bunx playwright install chromium

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('bun.lock') }}

      - name: Cache pre-commit
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
            ${{ runner.os }}-pre-commit-

      - name: Run pre-commit
        id: pre-commit
        run: |
          pip install pre-commit
          pre-commit run --all-files

      - name: Commit formatted files
        if: ${{ !cancelled() }}
        uses: suzuki-shunsuke/commit-action@v0.0.7
        with:
          commit_message: 'style: auto-format'
          workflow: deny
          github_token: ${{ steps.app-token.outputs.token }}

      - name: Run tests (without E2E)
        run: bun run test

      - name: Run Percy E2E tests
        run: bun run test:e2e
        env:
          NEXT_PUBLIC_APP_ENV: test
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
